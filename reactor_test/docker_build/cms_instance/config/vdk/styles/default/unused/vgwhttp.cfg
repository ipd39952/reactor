#
# vgwhttp.cfg - vgwhttp configuration store
#
# This is the default secure HTTP Gateway config file.
#

$control:1

## the global settings for cookie configuration (optional)
## and will take precendence if no local section is specified
## for settings of cookies for each repository
# cookies:
# {
### you can specify the cookie file (optional), which allows gateway to fetch
### cookie at anthentication time for each user. The file must be in style
### directory. 
#   cookieurlfile: "-local meme.txt"
### you can turn on/off cookie support in gateway, the default is on
#   useCookies: true
# }

## the global settings for security cache configuration (optional)
## and will take precendence if no local section is specified
## for settings of security for each repository
# security:
# {
### you can specify the cache level in gateway (optional), the default is document
#   mode: none|webserver|directory|document
#   cachetimeout: seconds # can only be global setting, the default is 3600 seconds
#   usePreauthentication: true # the default is false
# }

## Repository settings.  Zero or multiple repository entries can be listed.
repository: default
{
  # HTTP security module
  securityModuleId: 0xdff4
  url: http://.*
  url: https://.*

### loginURL (optional). Enable gateway to validate if the user can access
### specified URL, and use the credentials in logon page as necessary
#   loginURL: http://hostname:port/docpath/doc

### Entries for enabling forms-based authentication, form_loginurl is required.
##  One or more form_credential entry might be required, rest are optional
#  form_loginurl: http://hostname.domain.com:port/LoginForm.html
#  form_action: http://hostname.domain.com:port/LoginAction.html
#  form_errorurl: http://hostname.domain.com:port/LoginError.html
#  form_method: POST or GET
#  form_charset: <character of credential information>
#  form_credential: <username>
#  form_credential: <password>
#  form_formnum: 1/2/3... <Sequential number of the login form on a multi-forms page, 
#                          starting from 1, required for multi-forms authentication>

### If you use the Netegrity Security Module, you need to comment previous
### securityModuleId definition
#   Netegrity security module id
#   securityModuleId: 0xef01
#   moduleData: AgentName        verity-agent-name
#   moduleData: PolicyServerIP   policy-server-ip
#   moduleData: SharedSecret     shared-secret-key
#   moduleData: AuthURL          one-protect-resource-url
#   these are optional, please see SiteMinder manual for details
#   moduleData: Timeout		   75
#   moduleData: ConnMin		   3
#   moduleData: ConnMax		   10
#   moduleData: ConnStep	   1
#   moduleData: AZPort		   44443
#   moduleData: AuthPort	   44442
#   moduleData: AcctPort	   44441

### the local settings for cookie configuration (optional)
#   cookies:
#   {
##### you can specify the cookie file (optional), which allows gateway to fetch
##### cookie at anthentication time for each user. The file must be in style
##### directory. 
#     cookieurlfile: "-local meme.txt"
##### you can turn on/off cookie support in gateway, the default is on
#     useCookies: true
#   }

### the local settings for security cache configuration (optional)
#   security:
#   {
##### you can specify the cache level in gateway (optional), the default is document
#     mode: none|webserver|directory|document
#   }
}

## Proxy settings (optional)
# proxy: hostname portnum
# {
#   proxyAuth: username password (optional)
#   noproxy: (optional)
#   {
#     server: hostname or IP-address (one or more "server" lines ok, up to 255)
#   }
# }

## User-Agent (optional).  Sent as User-Agent in http requests
# userAgent: string

## Timeout (optional).  Count in seconds before timing out a connection.
## Gateway will wait 2 x count for data once connection is established.
# timeout: count

## autoLogin (optional).  This option if set to TRUE indicates the HTTP gateway
## should always send credentials (userid:password) on each GET request if they
## are available for the HTTP target repository.  This is as opposed to the
## default behaviour of only sending credentials if the remote system 
## returns a authentication (401) error and they are available.
# autoLogin: TRUE

## User-defined Header (optional).  Sent as a header in http requests
## The string could contain multi headers, but user must have "\r\n"
## for each header. For example:
## header: "attribute: value\r\n"
# header: string

## Ignore the "Charset" defined in the "Content-Type" parameter of the HTTP header. 
## The default value is False. 
## The HTTP 'Charset' parameter, if defined, will be used as the stream charset
## (instead of detecting the charset from the content-type metadata). 
## To ignore the HTTP header charset setting, set the value to True.
# ignoreHeaderCharset: False

$$
